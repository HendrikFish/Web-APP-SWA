import"./bootstrap.esm-DGoQCxh1.js";import{i as T}from"./header-DaFr1czl.js";import{showToast as c}from"./toast-notification-BBb3bACE.js";const h={api:{zutaten:"/api/zutaten",stammdaten:"/api/zutaten/stammdaten",vorschlaege:"/api/zutaten/vorschlaege",exportZutaten:"/api/zutaten/export",importZutaten:"/api/zutaten/import"}};async function x(t){if(!t.ok){const n=(await t.json()).message||"Ein unbekannter Fehler ist aufgetreten.";throw c(n,"error"),new Error(n)}return t.json()}async function N(){const t=await fetch(h.api.zutaten);return x(t)}async function $(){const t=await fetch(h.api.stammdaten);return x(t)}async function A(){const t=await fetch(h.api.vorschlaege);if(!t.ok)throw new Error("Fehler beim Abrufen der Vorschläge");return t.json()}async function j(t){const e=await fetch(h.api.zutaten,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok){const n=await e.json();throw new Error(n.message||"Fehler beim Erstellen der Zutat")}return e.json()}async function M(t){try{const e=await fetch(`/api/zutaten/${t.zutatennummer}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok){const n=await e.json();throw new Error(n.message||"Fehler beim Aktualisieren der Zutat")}return await e.json()}catch(e){throw console.error("API-Fehler beim Aktualisieren der Zutat:",e),e}}async function H(t){try{const e=await fetch(`/api/zutaten/${t}`,{method:"DELETE"});if(!e.ok){const n=await e.json();throw new Error(n.message||"Fehler beim Löschen der Zutat")}return e.status===204?{message:"Zutat erfolgreich gelöscht"}:await e.json()}catch(e){throw console.error("API-Fehler beim Löschen der Zutat:",e),e}}async function O(){const t=await fetch(h.api.exportZutaten);if(!t.ok)throw new Error("Fehler beim Exportieren der Zutaten.");const e=await t.blob(),n=window.URL.createObjectURL(e),r=document.createElement("a");r.href=n,r.download="zutaten-export.json",document.body.appendChild(r),r.click(),r.remove(),window.URL.revokeObjectURL(n)}async function P(t){const e=await t.text(),n=JSON.parse(e),r=await fetch(h.api.importZutaten,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}),a=await r.json();if(!r.ok)throw new Error(a.message||"Fehler beim Importieren der Zutaten.");return a}let I=[],u=[],F=null;const S=document.getElementById("zutat-form"),_=document.getElementById("toggle-naehrwerte-btn"),v=document.getElementById("naehrwerte-section"),D=document.getElementById("toggle-allergene-btn"),k=document.getElementById("allergene-section");function C(){S.reset(),document.querySelectorAll("#allergene-container .allergen-button").forEach(n=>{n.classList.remove("active"),n.setAttribute("aria-pressed","false")}),document.querySelector(".card-header h1").textContent="Neue Zutat erfassen",document.querySelector('button[type="submit"]').textContent="Zutat speichern",v.classList.add("d-none"),k.classList.add("d-none");const e=document.getElementById("cancel-edit-btn");e&&e.remove(),F=null,document.getElementById("preis-verwendung").textContent="wird berechnet...",document.getElementById("verwendungseinheit").innerHTML='<option value="">Bitte wählen...</option>'}function V(t){C(),F=t.zutatennummer,document.querySelector(".card-header h1").textContent="Zutat bearbeiten";const e=document.querySelector('button[type="submit"]');if(e.textContent="Änderungen speichern",!document.getElementById("cancel-edit-btn")){const i=document.createElement("button");i.type="button",i.id="cancel-edit-btn",i.textContent="Abbrechen",i.className="btn btn-secondary mt-2",i.addEventListener("click",C),e.parentElement.appendChild(i)}document.getElementById("zutat-name").value=t.name,document.getElementById("zutat-kategorie").value=t.kategorie,document.getElementById("zutat-lieferant").value=t.lieferant,document.getElementById("zutat-herkunft").value=t.herkunft||"";const n=t.preis||{};document.getElementById("preis-basis").value=n.basis||0;const r=document.getElementById("basiseinheit");r.value=n.basiseinheit||"",r.dispatchEvent(new Event("change")),setTimeout(()=>{const i=document.getElementById("verwendungseinheit");i.value=n.verwendungseinheit||"",y()},100),t.allergene&&t.allergene.length>0&&(k.classList.remove("d-none"),document.querySelectorAll("#allergene-container .allergen-button").forEach(o=>{const s=t.allergene.some(l=>l.code===o.dataset.code);o.classList.toggle("active",s),o.setAttribute("aria-pressed",s)}));const a=t.naehrwerte||{};Object.keys(a).length>0&&(v.classList.remove("d-none"),document.getElementById("naehrwert-kalorien").value=a.kalorien_kcal||"",document.getElementById("naehrwert-fett").value=a.fett_g||"",document.getElementById("naehrwert-zucker").value=a.davon_zucker_g||"",document.getElementById("naehrwert-eiweiss").value=a.eiweiss_g||"",document.getElementById("naehrwert-kohlenhydrate").value=a.kohlenhydrate_g||"",document.getElementById("naehrwert-salz").value=a.salz_g||""),S.scrollIntoView({behavior:"smooth"})}function q(){const t=document.getElementById("zutat-name"),e=document.getElementById("custom-suggestions");t.addEventListener("input",async()=>{const n=t.value.toLowerCase();if(n.length<2){e.innerHTML="",e.style.display="none";return}if(I.length===0)try{I=await A()}catch(a){console.error("Fehler beim Laden der Vorschläge:",a)}const r=I.filter(a=>a&&a.name?a.name.toLowerCase().includes(n):!1).slice(0,3);r.length>0?(e.innerHTML=r.map(a=>`<a href="#" class="list-group-item list-group-item-action" data-name="${a.name}">${a.name}</a>`).join(""),e.style.display="block"):e.style.display="none"}),e.addEventListener("click",n=>{if(n.preventDefault(),n.target.matches(".list-group-item")){const r=n.target.dataset.name;t.value=r,e.innerHTML="",e.style.display="none"}}),document.addEventListener("click",n=>{!t.contains(n.target)&&!e.contains(n.target)&&(e.style.display="none")}),_.addEventListener("click",()=>{v.classList.toggle("d-none")}),D.addEventListener("click",()=>{k.classList.toggle("d-none")})}function U(t){const e=document.getElementById("zutat-kategorie"),n=document.getElementById("zutat-lieferant"),r=document.getElementById("allergene-container"),a=document.getElementById("basiseinheit"),i=document.getElementById("verwendungseinheit");e&&t.kategorien&&(e.innerHTML='<option value="">Bitte wählen...</option>',t.kategorien.forEach(o=>{const s=new Option(o,o);e.add(s)})),n&&t.lieferanten&&(n.innerHTML='<option value="">Bitte wählen...</option>',t.lieferanten.forEach(o=>{const s=new Option(o,o);n.add(s)})),r&&t.allergene&&(r.innerHTML="",t.allergene.forEach(o=>{const s=document.createElement("button");s.type="button",s.className="btn btn-outline-secondary btn-sm allergen-button",s.dataset.code=o.code,s.textContent=`${o.code} - ${o.name}`,r.appendChild(s)}),r.addEventListener("click",o=>{if(o.target.classList.contains("allergen-button")){o.target.classList.toggle("active");const s=o.target.classList.contains("active");o.target.setAttribute("aria-pressed",s)}})),u=t.einheiten||[],a&&i&&u.length>0&&(a.innerHTML='<option value="">Bitte wählen...</option>',u.forEach(o=>{const s=document.createElement("option");s.value=o.abk,s.textContent=`${o.name} (${o.abk})`,s.dataset.typ=o.typ,a.appendChild(s)}),a.addEventListener("change",()=>{const s=a.options[a.selectedIndex].dataset.typ;i.innerHTML='<option value="">Bitte wählen...</option>',s&&u.filter(d=>d.typ===s).forEach(d=>{const g=document.createElement("option");g.value=d.abk,g.textContent=`${d.name} (${d.abk})`,i.appendChild(g)}),y()}),document.getElementById("preis-basis").addEventListener("input",y),i.addEventListener("change",y))}function y(){const t=document.getElementById("preis-basis"),e=document.getElementById("basiseinheit"),n=document.getElementById("verwendungseinheit"),r=document.getElementById("preis-verwendung"),a=parseFloat(t.value),i=e.value,o=n.value;if(isNaN(a)||!i||!o){r.textContent="wird berechnet...";return}const s=u.find(B=>B.abk===i),l=u.find(B=>B.abk===o);if(!s||!l||s.typ!==l.typ){r.textContent="Einheiten inkompatibel";return}const g=a/s.faktor*l.faktor;if(isNaN(g)){r.textContent="Ungültige Berechnung";return}r.innerHTML=`ca. <span class="fw-bold">${g.toFixed(4).replace(".",",")} €</span>`}function R(){const t=u.find(a=>a.abk===document.getElementById("basiseinheit").value),e=u.find(a=>a.abk===document.getElementById("verwendungseinheit").value);let n=1;t&&e&&t.typ===e.typ&&(n=t.faktor/e.faktor);const r={name:document.getElementById("zutat-name").value.trim(),kategorie:document.getElementById("zutat-kategorie").value,lieferant:document.getElementById("zutat-lieferant").value,herkunft:document.getElementById("zutat-herkunft").value,preis:{basis:parseFloat(document.getElementById("preis-basis").value),basiseinheit:document.getElementById("basiseinheit").value,verwendungseinheit:document.getElementById("verwendungseinheit").value,umrechnungsfaktor:n},allergene:[],naehrwerte:{}};if(k.classList.contains("d-none")||(r.allergene=Array.from(document.querySelectorAll("#allergene-container .allergen-button.active")).map(a=>({code:a.dataset.code,name:a.textContent.split(" - ")[1]}))),!v.classList.contains("d-none")){const a=parseFloat(document.getElementById("naehrwert-kalorien").value),i=parseFloat(document.getElementById("naehrwert-fett").value),o=parseFloat(document.getElementById("naehrwert-zucker").value),s=parseFloat(document.getElementById("naehrwert-eiweiss").value),l=parseFloat(document.getElementById("naehrwert-kohlenhydrate").value),d=parseFloat(document.getElementById("naehrwert-salz").value);isNaN(a)||(r.naehrwerte.kalorien_kcal=a),isNaN(i)||(r.naehrwerte.fett_g=i),isNaN(o)||(r.naehrwerte.davon_zucker_g=o),isNaN(s)||(r.naehrwerte.eiweiss_g=s),isNaN(l)||(r.naehrwerte.kohlenhydrate_g=l),isNaN(d)||(r.naehrwerte.salz_g=d)}return r}function J(){return S.checkValidity()}function K(){return F}let p=[];const m=document.getElementById("zutaten-liste-container"),b=document.getElementById("filter-zutaten"),w=document.getElementById("filter-kategorie"),E=document.getElementById("sort-zutaten"),L=document.getElementById("zutaten-export-btn"),Z=document.getElementById("zutaten-import-input");function G(t){if(m){if(m.innerHTML="",t.length===0){m.innerHTML='<p class="text-center text-muted">Keine Zutaten gefunden.</p>';return}t.forEach(e=>{const n=document.createElement("div");n.className="list-group-item d-flex justify-content-between align-items-center";const r=e.preis&&typeof e.preis.basis=="number"?e.preis.basis.toFixed(2).replace(".",","):"N/A",a=e.preis&&e.preis.basiseinheit?e.preis.basiseinheit:"";n.innerHTML=`
            <div class="flex-grow-1">
                <strong>${e.name}</strong>
                <small class="text-muted d-block">${e.kategorie} | ${e.lieferant}</small>
            </div>
            <div class="d-flex align-items-center">
                <span class="badge bg-secondary fw-normal rounded-pill me-3">${r} € / ${a}</span>
                <button class="btn btn-sm btn-outline-secondary edit-button me-2" data-id="${e.zutatennummer}">
                    <i class="bi bi-pencil"></i><span class="d-none d-md-inline ms-1">Bearbeiten</span>
                </button>
                <button class="btn btn-sm btn-outline-danger delete-button" data-id="${e.zutatennummer}">
                    <i class="bi bi-trash"></i><span class="d-none d-md-inline ms-1">Löschen</span>
                </button>
            </div>
        `,m.appendChild(n)})}}function f(){const t=b.value.toLowerCase(),e=w.value,n=E.value;let r=[...p];switch(e&&(r=r.filter(a=>a.kategorie===e)),t&&(r=r.filter(a=>a.name.toLowerCase().includes(t)||a.lieferant.toLowerCase().includes(t))),n){case"name-asc":r.sort((a,i)=>a.name.localeCompare(i.name));break;case"name-desc":r.sort((a,i)=>i.name.localeCompare(a.name));break}G(r)}function Q(t){!w||!t||!t.kategorien||(t.kategorien.forEach(e=>{const n=new Option(e,e);w.add(n)}),w.addEventListener("change",f))}async function W(){if(m){m.addEventListener("click",async t=>{const e=t.target.closest(".edit-button");if(e){const r=parseInt(e.dataset.id,10),a=p.find(i=>i.zutatennummer===r);a&&V(a);return}const n=t.target.closest(".delete-button");if(n){const r=parseInt(n.dataset.id,10),a=p.find(i=>i.zutatennummer===r);if(a&&confirm(`Möchten Sie die Zutat "${a.name}" wirklich löschen?`))try{await H(r),c("Zutat erfolgreich gelöscht","success"),await z()}catch(i){c(i.message||"Fehler beim Löschen.","error")}}});try{p=await N(),f()}catch(t){console.error("Fehler beim Laden der Zutatenliste:",t),m.innerHTML='<p class="text-center text-danger">Fehler beim Laden der Zutaten.</p>'}b==null||b.addEventListener("input",f),E==null||E.addEventListener("change",f),L==null||L.addEventListener("click",async()=>{try{await O(),c("Zutaten werden exportiert...","info")}catch(t){c(t.message||"Export fehlgeschlagen.","error")}}),Z==null||Z.addEventListener("change",async t=>{const e=t.target.files[0];if(e)try{const n=await P(e);c(`${n.importedCount} Zutaten importiert, ${n.skippedCount} Duplikate übersprungen.`,"success"),await z()}catch(n){c(n.message||"Import fehlgeschlagen.","error")}finally{t.target.value=null}})}}async function z(){try{p=await N(),f()}catch(t){console.error("Fehler beim Aktualisieren der Zutatenliste:",t)}}async function X(){try{await T();const e=await $();U(e),Q(e),q(),W()}catch(e){console.error("Fehler bei der Initialisierung der Seite:",e),c("Fehler beim Laden der Seitendaten.","error")}const t=document.getElementById("zutat-form");t&&t.addEventListener("submit",Y)}async function Y(t){if(t.preventDefault(),!J()){c("Bitte füllen Sie alle Pflichtfelder aus (markiert mit *).","warning");return}const e=R(),n=K();try{n?(await M({...e,zutatennummer:n}),c("Zutat erfolgreich aktualisiert!","success")):(await j(e),c("Zutat erfolgreich gespeichert!","success")),C(),await z()}catch(r){console.error("Fehler beim Verarbeiten der Zutat:",r),c(r.message||"Ein unbekannter Fehler ist aufgetreten.","error")}}document.addEventListener("DOMContentLoaded",X);
